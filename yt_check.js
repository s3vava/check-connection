        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–∫–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        let lastCheckResult = null;
        let serviceChecker = null;

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('DOMContentLoaded', function() {
            addLogEntry('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ');
            updateTimestamp('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º checker –µ—Å–ª–∏ –∫–ª–∞—Å—Å –¥–æ—Å—Ç—É–ø–µ–Ω
            if (typeof ServiceChecker !== 'undefined') {
                serviceChecker = new ServiceChecker();
                addLogEntry('ServiceChecker –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω', 'success');
            } else {
                addLogEntry('–û—à–∏–±–∫–∞: ServiceChecker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ yt_check.js –∑–∞–≥—Ä—É–∂–µ–Ω', 'error');
            }
        });

        // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
        async function startCheck() {
            if (!serviceChecker) {
                addLogEntry('–û—à–∏–±–∫–∞: ServiceChecker –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω', 'error');
                return;
            }

            addLogEntry('üé¨ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É YouTube...', 'success');
            updateTimestamp('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞');
            updateServiceStatus('checking', '–ü—Ä–æ–≤–µ—Ä–∫–∞...');
            hideRegionInfo();

            const startTime = performance.now();

            try {
                // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º console.log –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
                const originalLog = console.log;
                console.log = function(...args) {
                    const message = args.join(' ');
                    addLogEntry(message);
                    originalLog.apply(console, args);
                };

                // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
                await serviceChecker.checkYouTubeService();
                
                const totalTime = Math.round(performance.now() - startTime);
                addLogEntry(`‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ ${totalTime}–º—Å`, 'success');
                updateTimestamp(`–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (${totalTime}–º—Å)`);

                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º console.log
                console.log = originalLog;

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                showRegionInfo(totalTime);

            } catch (error) {
                const totalTime = Math.round(performance.now() - startTime);
                addLogEntry(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ${error.message}`, 'error');
                updateTimestamp(`–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ (${totalTime}–º—Å)`);
                updateServiceStatus('error', '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏');
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º console.log
                console.log = originalLog;
            }
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
        function updateServiceStatus(status, text) {
            const indicator = document.querySelector('#youtube-status .status-indicator');
            const textElement = document.getElementById('youtube-text');

            if (indicator) {
                indicator.className = `status-indicator ${status}`;
            }
            if (textElement) {
                textElement.textContent = text;
            }
        }

        // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–≥–∏–æ–Ω–µ
        function showRegionInfo(responseTime) {
            const regionInfo = document.getElementById('region-info');
            const regionCode = document.getElementById('region-code');
            const responseTimeElement = document.getElementById('response-time');

            // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å —Ä–µ–≥–∏–æ–Ω –∏–∑ —Å—Ç–∞—Ç—É—Å–∞
            const statusText = document.getElementById('youtube-text').textContent;
            const regionMatch = statusText.match(/\(([A-Z]{2})\)/);
            
            if (regionMatch) {
                regionCode.textContent = regionMatch[1];
                responseTimeElement.textContent = responseTime;
                regionInfo.style.display = 'block';
            }
        }

        // –°–∫—Ä—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–≥–∏–æ–Ω–µ
        function hideRegionInfo() {
            document.getElementById('region-info').style.display = 'none';
        }

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥
        function addLogEntry(message, type = 'info') {
            const logOutput = document.getElementById('log-output');
            const entry = document.createElement('div');
            entry.className = `log-entry ${type}`;
            
            const timestamp = new Date().toLocaleTimeString('ru-RU');
            entry.textContent = `[${timestamp}] ${message}`;
            
            logOutput.appendChild(entry);
            logOutput.scrollTop = logOutput.scrollHeight;

            // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–µ
            const entries = logOutput.getElementsByClassName('log-entry');
            if (entries.length > 100) {
                logOutput.removeChild(entries[0]);
            }
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        function updateTimestamp(status) {
            const timestampElement = document.getElementById('timestamp');
            const now = new Date().toLocaleString('ru-RU');
            timestampElement.textContent = `–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: ${now} - ${status}`;
        }

        // –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–∞
        function clearLog() {
            const logOutput = document.getElementById('log-output');
            logOutput.innerHTML = '<div class="log-entry">–õ–æ–≥ –æ—á–∏—â–µ–Ω</div>';
            addLogEntry('–õ–æ–≥ –æ—á–∏—â–µ–Ω', 'warning');
        }

        // –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        function showDetailedInfo() {
            const statusText = document.getElementById('youtube-text').textContent;
            const indicator = document.querySelector('#youtube-status .status-indicator');
            const status = indicator.className.replace('status-indicator ', '');

            let detailMessage = `–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: ${statusText}\n`;
            detailMessage += `–ö–ª–∞—Å—Å —Å—Ç–∞—Ç—É—Å–∞: ${status}\n`;
            detailMessage += `User Agent: ${navigator.userAgent}\n`;
            detailMessage += `–Ø–∑—ã–∫ –±—Ä–∞—É–∑–µ—Ä–∞: ${navigator.language}\n`;
            detailMessage += `–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${navigator.platform}`;

            alert(detailMessage);
            addLogEntry('–ü–æ–∫–∞–∑–∞–Ω–∞ –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'info');
        }

        // –ò–º–∏—Ç–∞—Ü–∏—è –º–µ—Ç–æ–¥–∞ updateServiceStatus –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å ServiceChecker
        if (typeof window.ServiceChecker === 'undefined') {
            window.updateServiceStatus = updateServiceStatus;
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
        window.addEventListener('error', function(event) {
            if (event.filename && event.filename.includes('yt_check.js')) {
                addLogEntry('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ yt_check.js: ' + event.message, 'error');
                updateServiceStatus('error', '–°–∫—Ä–∏–ø—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            }
        });

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        window.addEventListener('load', function() {
            setTimeout(() => {
                if (confirm('–í—ã–ø–æ–ª–Ω–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É YouTube –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã?')) {
                    startCheck();
                }
            }, 1000);
        });